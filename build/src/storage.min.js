import{encryptText,decryptText,generateRandomKey}from"./aes.min.js";let key,callback=null;export function initStorage(t,e){key=t,callback=e}export function getRawStorage(){return new Promise((t=>{chrome.storage.sync.get(null,(e=>{try{e&&e.data||t(""),t(e.data)}catch{t("")}}))}))}export function putRawStorage(t){return new Promise((e=>{chrome.storage.sync.set({data:t},(()=>{try{callback()}catch{}e(1)}))}))}export function getStorage(){return new Promise((t=>{chrome.storage.sync.get(null,(e=>{try{e&&e.data||t({});let r=decryptText(e.data,key);r||t({}),r=JSON.parse(r),r&&r.data||t({}),t(r.data)}catch{t({})}}))}))}export function putStorage(t){try{let e={data:t,random:generateRandomKey(32)};return e=JSON.stringify(e),e=encryptText(e,key),putRawStorage(e)}catch{return new Promise((t=>{t(0)}))}}